{
	"id": "633f63b42f41e56282bf7652cd61d6f0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"variablesIn Soliditiy/variables.sol": {
				"content": "// variables are reserved memory locations  to store values\r\n// used to store information and to be referanced and manipulated to computer program\r\n// Types: Boolean - keyword:bool -value: True/False\r\n// Integer: keyword : uint - value-signed and unsigned integer of varying sizes\r\n// String : keyword : string : data values tht are made up of ordered sequences of characters\r\n\r\n// store-owner = 300\r\n// chocolate-bar = 20\r\n// total-value = store-owner +choclate-bar;\r\n\r\n// Main type sof vairables\r\n// Booleans\r\n// lieDetector = boolean True or False\r\n// Integers\r\n// walletAmount = integer would hold the amount\r\n// Strings\r\n// errorMessageText = string that would say 'Error'  \r\n\r\n// Solidity Variables\r\npragma solidity >=0.8.0 < 0.9.0;\r\n\r\ncontract LearnSolidityVariables {\r\n    // all the codes come here\r\n    uint chocolateBar = 100;\r\n    uint storeOwner   = 300;\r\n    bool lieDetector  = true;\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"variablesIn Soliditiy/variables.sol": {
				"LearnSolidityVariables": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"variablesIn Soliditiy/variables.sol\":742:907  contract LearnSolidityVariables {... */\n  mstore(0x40, 0x80)\n    /* \"variablesIn Soliditiy/variables.sol\":833:836  100 */\n  0x64\n    /* \"variablesIn Soliditiy/variables.sol\":813:836  uint chocolateBar = 100 */\n  0x00\n  sstore\n    /* \"variablesIn Soliditiy/variables.sol\":863:866  300 */\n  0x012c\n    /* \"variablesIn Soliditiy/variables.sol\":843:866  uint storeOwner   = 300 */\n  0x01\n  sstore\n    /* \"variablesIn Soliditiy/variables.sol\":893:897  true */\n  0x01\n    /* \"variablesIn Soliditiy/variables.sol\":873:897  bool lieDetector  = true */\n  0x02\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"variablesIn Soliditiy/variables.sol\":742:907  contract LearnSolidityVariables {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"variablesIn Soliditiy/variables.sol\":742:907  contract LearnSolidityVariables {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b1291321d2f457d3de0b4d53de2fdf313a44f170708f1b337dd2289046330aba64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052606460005561012c6001556001600260006101000a81548160ff021916908315150217905550348015603557600080fd5b50603f8060436000396000f3fe6080604052600080fdfea2646970667358221220b1291321d2f457d3de0b4d53de2fdf313a44f170708f1b337dd2289046330aba64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x64 PUSH1 0x0 SSTORE PUSH2 0x12C PUSH1 0x1 SSTORE PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH1 0x35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x43 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0x29 SGT 0x21 0xD2 DELEGATECALL JUMPI 0xD3 0xDE SIGNEXTEND 0x4D MSTORE8 0xDE 0x2F 0xDF BALANCE GASPRICE DIFFICULTY CALL PUSH17 0x708F1B337DD2289046330ABA64736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "742:165:0:-:0;;;833:3;813:23;;863:3;843:23;;893:4;873:24;;;;;;;;;;;;;;;;;;;;742:165;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220b1291321d2f457d3de0b4d53de2fdf313a44f170708f1b337dd2289046330aba64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0x29 SGT 0x21 0xD2 DELEGATECALL JUMPI 0xD3 0xDE SIGNEXTEND 0x4D MSTORE8 0xDE 0x2F 0xDF BALANCE GASPRICE DIFFICULTY CALL PUSH17 0x708F1B337DD2289046330ABA64736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "742:165:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "68545",
								"totalCost": "81145"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 742,
									"end": 907,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 742,
									"end": 907,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 742,
									"end": 907,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 833,
									"end": 836,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 813,
									"end": 836,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 813,
									"end": 836,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 863,
									"end": 866,
									"name": "PUSH",
									"source": 0,
									"value": "12C"
								},
								{
									"begin": 843,
									"end": 866,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 843,
									"end": 866,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 893,
									"end": 897,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 873,
									"end": 897,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 873,
									"end": 897,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 873,
									"end": 897,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 873,
									"end": 897,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 873,
									"end": 897,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 873,
									"end": 897,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 873,
									"end": 897,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 873,
									"end": 897,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 873,
									"end": 897,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 873,
									"end": 897,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 873,
									"end": 897,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 873,
									"end": 897,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 873,
									"end": 897,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 873,
									"end": 897,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 873,
									"end": 897,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 873,
									"end": 897,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 873,
									"end": 897,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 873,
									"end": 897,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 873,
									"end": 897,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 873,
									"end": 897,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 742,
									"end": 907,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 742,
									"end": 907,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 742,
									"end": 907,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 742,
									"end": 907,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 742,
									"end": 907,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 742,
									"end": 907,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 742,
									"end": 907,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 742,
									"end": 907,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 742,
									"end": 907,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 742,
									"end": 907,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 742,
									"end": 907,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 742,
									"end": 907,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 742,
									"end": 907,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 742,
									"end": 907,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 742,
									"end": 907,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 742,
									"end": 907,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 742,
									"end": 907,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 742,
									"end": 907,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b1291321d2f457d3de0b4d53de2fdf313a44f170708f1b337dd2289046330aba64736f6c63430008110033",
									".code": [
										{
											"begin": 742,
											"end": 907,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 742,
											"end": 907,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 742,
											"end": 907,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 742,
											"end": 907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 742,
											"end": 907,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"variablesIn Soliditiy/variables.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"variablesIn Soliditiy/variables.sol\":\"LearnSolidityVariables\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"variablesIn Soliditiy/variables.sol\":{\"keccak256\":\"0x9db449a286825b3a7f67b5aa4f5b03fe7d7a5570b6cbcb0242f538e7a24971eb\",\"urls\":[\"bzz-raw://b089aaf92009f0e90903c6faada75a2facbc2607fe7bc824f3516627e6a0b85b\",\"dweb:/ipfs/Qmek5L81yYHWihR4xA8UmbN93biqjJAbLyLyEaQAonmT34\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "variablesIn Soliditiy/variables.sol:LearnSolidityVariables",
								"label": "chocolateBar",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 7,
								"contract": "variablesIn Soliditiy/variables.sol:LearnSolidityVariables",
								"label": "storeOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 10,
								"contract": "variablesIn Soliditiy/variables.sol:LearnSolidityVariables",
								"label": "lieDetector",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> variablesIn Soliditiy/variables.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "variablesIn Soliditiy/variables.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"variablesIn Soliditiy/variables.sol": {
				"ast": {
					"absolutePath": "variablesIn Soliditiy/variables.sol",
					"exportedSymbols": {
						"LearnSolidityVariables": [
							11
						]
					},
					"id": 12,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "706:32:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LearnSolidityVariables",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 11,
							"linearizedBaseContracts": [
								11
							],
							"name": "LearnSolidityVariables",
							"nameLocation": "751:22:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"mutability": "mutable",
									"name": "chocolateBar",
									"nameLocation": "818:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 11,
									"src": "813:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "813:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "833:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "storeOwner",
									"nameLocation": "848:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 11,
									"src": "843:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 5,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "843:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333030",
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "863:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_300_by_1",
											"typeString": "int_const 300"
										},
										"value": "300"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "lieDetector",
									"nameLocation": "878:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 11,
									"src": "873:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 8,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 9,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "893:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "internal"
								}
							],
							"scope": 12,
							"src": "742:165:0",
							"usedErrors": []
						}
					],
					"src": "706:201:0"
				},
				"id": 0
			}
		}
	}
}