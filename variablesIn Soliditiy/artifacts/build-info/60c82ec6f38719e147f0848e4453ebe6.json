{
	"id": "60c82ec6f38719e147f0848e4453ebe6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"variablesIn Soliditiy/variables.sol": {
				"content": "// variables are reserved memory locations  to store values\r\n// used to store information and to be referanced and manipulated to computer program\r\n// Types: Boolean - keyword:bool -value: True/False\r\n// Integer: keyword : uint - value-signed and unsigned integer of varying sizes\r\n// String : keyword : string : data values tht are made up of ordered sequences of characters\r\n\r\n// store-owner = 300\r\n// chocolate-bar = 20\r\n// total-value = store-owner +choclate-bar;\r\n\r\n// Main type sof vairables\r\n// Booleans\r\n// lieDetector = boolean True or False\r\n// Integers\r\n// walletAmount = integer would hold the amount\r\n// Strings\r\n// errorMessageText = string that would say 'Error'  \r\n\r\n// Solidity Variables\r\npragma solidity >=0.8.0 < 0.9.0;\r\n\r\ncontract LearnSolidityVariables {\r\n    // all the codes come here\r\n    uint chocolateBar = 100;\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"variablesIn Soliditiy/variables.sol": {
				"LearnSolidityVariables": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"variablesIn Soliditiy/variables.sol\":742:840  contract LearnSolidityVariables {... */\n  mstore(0x40, 0x80)\n    /* \"variablesIn Soliditiy/variables.sol\":833:836  100 */\n  0x64\n    /* \"variablesIn Soliditiy/variables.sol\":813:836  uint chocolateBar = 100 */\n  0x00\n  sstore\n    /* \"variablesIn Soliditiy/variables.sol\":742:840  contract LearnSolidityVariables {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"variablesIn Soliditiy/variables.sol\":742:840  contract LearnSolidityVariables {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c9cf04bf5acb81a2479b79e8026fed04fd96cb6b1d415b72d821f2736bcd221264736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526064600055348015601457600080fd5b50603f8060226000396000f3fe6080604052600080fdfea2646970667358221220c9cf04bf5acb81a2479b79e8026fed04fd96cb6b1d415b72d821f2736bcd221264736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x64 PUSH1 0x0 SSTORE CALLVALUE DUP1 ISZERO PUSH1 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x22 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 0xCF DIV 0xBF GAS 0xCB DUP2 LOG2 SELFBALANCE SWAP12 PUSH26 0xE8026FED04FD96CB6B1D415B72D821F2736BCD221264736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "742:98:0:-:0;;;833:3;813:23;;742:98;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220c9cf04bf5acb81a2479b79e8026fed04fd96cb6b1d415b72d821f2736bcd221264736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 0xCF DIV 0xBF GAS 0xCB DUP2 LOG2 SELFBALANCE SWAP12 PUSH26 0xE8026FED04FD96CB6B1D415B72D821F2736BCD221264736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "742:98:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "22172",
								"totalCost": "34772"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 742,
									"end": 840,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 742,
									"end": 840,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 742,
									"end": 840,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 833,
									"end": 836,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 813,
									"end": 836,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 813,
									"end": 836,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 742,
									"end": 840,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 742,
									"end": 840,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 742,
									"end": 840,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 742,
									"end": 840,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 742,
									"end": 840,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 742,
									"end": 840,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 742,
									"end": 840,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 742,
									"end": 840,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 742,
									"end": 840,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 742,
									"end": 840,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 742,
									"end": 840,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 742,
									"end": 840,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 742,
									"end": 840,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 742,
									"end": 840,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 742,
									"end": 840,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 742,
									"end": 840,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 742,
									"end": 840,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 742,
									"end": 840,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c9cf04bf5acb81a2479b79e8026fed04fd96cb6b1d415b72d821f2736bcd221264736f6c63430008110033",
									".code": [
										{
											"begin": 742,
											"end": 840,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 742,
											"end": 840,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 742,
											"end": 840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 742,
											"end": 840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 742,
											"end": 840,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"variablesIn Soliditiy/variables.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"variablesIn Soliditiy/variables.sol\":\"LearnSolidityVariables\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"variablesIn Soliditiy/variables.sol\":{\"keccak256\":\"0xc1ab2dae0c128355f28f4aec40c21b60c2894721ac6276ceeb7fc3439dc832e9\",\"urls\":[\"bzz-raw://814873106921165b6045755d749bbc4e3ffaefa23d6c08ca036fa09c1c2d6dc1\",\"dweb:/ipfs/QmbAUSdBAihdNCTMUT1XHENDDrvFN5kubE2CqaYHKX5gLQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "variablesIn Soliditiy/variables.sol:LearnSolidityVariables",
								"label": "chocolateBar",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> variablesIn Soliditiy/variables.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "variablesIn Soliditiy/variables.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"variablesIn Soliditiy/variables.sol": {
				"ast": {
					"absolutePath": "variablesIn Soliditiy/variables.sol",
					"exportedSymbols": {
						"LearnSolidityVariables": [
							5
						]
					},
					"id": 6,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "706:32:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LearnSolidityVariables",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 5,
							"linearizedBaseContracts": [
								5
							],
							"name": "LearnSolidityVariables",
							"nameLocation": "751:22:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"mutability": "mutable",
									"name": "chocolateBar",
									"nameLocation": "818:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 5,
									"src": "813:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "813:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "833:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "internal"
								}
							],
							"scope": 6,
							"src": "742:98:0",
							"usedErrors": []
						}
					],
					"src": "706:134:0"
				},
				"id": 0
			}
		}
	}
}